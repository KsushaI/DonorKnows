from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
import logging
import os

# –ß—Ç–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞ –±–æ—Ç–∞ –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("No BOT_TOKEN environment variable found!")

# –°–ø–∏—Å–æ–∫ –≤–æ–ø—Ä–æ—Å–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
QUESTIONS = {
    "–û–±—â–∏–µ –≤–æ–ø—Ä–æ—Å—ã": [
        "–ß—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —Å –ø–ª–∞–∑–º–æ–π?",
        "–ù—É–∂–Ω–æ –ª–∏ –º–Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ?",
        "–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É —Å—Ç–∞—Ç—É—Å –ø–æ—á—ë—Ç–Ω–æ–≥–æ –¥–æ–Ω–æ—Ä–∞?"
    ],
    "–í—Ç–æ—Ä–æ–µ": ["1?", "2?", "3?", "4?", "5?", "6?"],
    "–î—Ä—É–≥–æ–µ": [
        "–ö—É–¥–∞ —è –ø–æ–ø–∞–ª?"
    ]
}

# –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
REPLIES = {
    "–ß—Ç–æ —Å–ª—É—á–∏—Ç—Å—è —Å –ø–ª–∞–∑–º–æ–π?": "–ï—ë –ø—Ä–æ–≤–µ—Ä—è—Ç –Ω–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å",
    "–ù—É–∂–Ω–æ –ª–∏ –º–Ω–µ –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ?": "–î–∞, –ø—Ä–∏—Ö–æ–¥–∏, –º—ã —Ç–µ–±—è –∂–¥—ë–º ;)",
    "–ö–æ–≥–¥–∞ —è –ø–æ–ª—É—á—É —Å—Ç–∞—Ç—É—Å –ø–æ—á—ë—Ç–Ω–æ–≥–æ –¥–æ–Ω–æ—Ä–∞?": "–û—á–µ–Ω—å –Ω–µ—Å–∫–æ—Ä–æ",
    "1?": "1.",
    "2?": "2.",
    "3?": "3.",
    "4?": "4.",
    "5?": "5.",
    "6?": "6.",
    "–ö—É–¥–∞ —è –ø–æ–ø–∞–ª?": "–°—é–¥–∞",
}

# ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã
MANAGER_CHAT_ID = 1120634377

# –°—Ç–∏–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥"
BACK_BUTTON = "‚¨ÖÔ∏è –ù–∞–∑–∞–¥"

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
user_manager_messages = {}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    handlers=[
        logging.FileHandler("bot.log", encoding="utf-8"),  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
        logging.StreamHandler()  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª—å
    ]
)
logger = logging.getLogger(__name__)

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    logger.info(f"User {update.message.from_user.username} started the bot.")
    keyboard = [[category] for category in QUESTIONS.keys()]
    reply_markup = ReplyKeyboardMarkup(keyboard)
    await update.message.reply_text("–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –±–æ—Ç –¥–ª—è –¥–æ–Ω–æ—Ä–æ–≤ü©∏\n–í—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –≤–æ–ø—Ä–æ—Å –º–µ–Ω–µ–¥–∂–µ—Ä—É –≤ —Å—Ç—Ä–æ–∫–µ –Ω–∏–∂–µ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:", reply_markup=reply_markup)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_message = update.message.text
    user_chat_id = update.message.chat_id
    user_message_id = update.message.message_id
    user_username = update.message.from_user.username  # –ü–æ–ª—É—á–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

    # –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    logger.info(f"[handle_message] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_username} (ID: {user_chat_id}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_message}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ–Ω–æ –æ—Ç–≤–µ—Ç–æ–º
    if update.message.from_user.id == MANAGER_CHAT_ID and update.message.reply_to_message:
        logger.info(f"[handle_message] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ @{user_username} (ID: {user_chat_id}) –ø—Ä–æ–ø—É—â–µ–Ω–æ, —Ç–∞–∫ –∫–∞–∫ —ç—Ç–æ –æ—Ç–≤–µ—Ç.")
        return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—Ç–≤–µ—Ç–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–∞

    if user_message == BACK_BUTTON:
        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥", –≤–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        keyboard = [[category] for category in QUESTIONS.keys()]
        reply_markup = ReplyKeyboardMarkup(keyboard)
        await update.message.reply_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=reply_markup)
        logger.info(f"[handle_message] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_username} (ID: {user_chat_id}) –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'.")
    elif user_message in QUESTIONS:
        # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å—ã –∏–∑ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        keyboard = [[question] for question in QUESTIONS[user_message]] + [[BACK_BUTTON]]
        reply_markup = ReplyKeyboardMarkup(keyboard)
        await update.message.reply_text(f"–í–æ–ø—Ä–æ—Å—ã –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ '{user_message}':", reply_markup=reply_markup)
        logger.info(f"[handle_message] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_username} (ID: {user_chat_id}) –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {user_message}.")
    elif user_message in REPLIES:
        # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –µ—Å—Ç—å –≤ —Å–ø–∏—Å–∫–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        await update.message.reply_text(REPLIES[user_message])
        logger.info(f"[handle_message] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_username} (ID: {user_chat_id}) –∑–∞–¥–∞–ª –≤–æ–ø—Ä–æ—Å: {user_message}. –û—Ç–≤–µ—Ç: {REPLIES[user_message]}")
    else:
        # –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å–∞ –Ω–µ—Ç, –ø–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä—É
        forwarded_message = await context.bot.forward_message(
            chat_id=MANAGER_CHAT_ID,
            from_chat_id=user_chat_id,
            message_id=user_message_id
        )

        # –õ–æ–≥–∏—Ä—É–µ–º –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä—É
        logger.info(f"[handle_message] –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{user_username} (ID: {user_chat_id}) –ø–µ—Ä–µ—Å–ª–∞–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä—É. ID –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {forwarded_message.message_id}.")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_manager_messages[forwarded_message.message_id] = {
            "user_chat_id": user_chat_id,
            "user_username": user_username,
            "user_message_id": user_message_id
        }

        # –õ–æ–≥–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–≤—è–∑–∏ –≤ —Å–ª–æ–≤–∞—Ä–µ
        logger.info(f"[handle_message] –°–≤—è–∑—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ID –ø–µ—Ä–µ—Å–ª–∞–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è {forwarded_message.message_id} -> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{user_username} (ID: {user_chat_id}).")

        await update.message.reply_text("–í–∞—à –≤–æ–ø—Ä–æ—Å –ø–µ—Ä–µ–¥–∞–Ω –º–µ–Ω–µ–¥–∂–µ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞.")

async def handle_manager_reply(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –õ–æ–≥–∏—Ä—É–µ–º –≤—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    logger.info(f"[handle_manager_reply] –í—Ö–æ–¥—è—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{update.message.from_user.username} (ID: {update.message.from_user.id}).")

    # Check if the message is from the manager
    if update.message.from_user.id == MANAGER_CHAT_ID:
        # –ü–æ–ª—É—á–∞–µ–º username –∏ ID –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        manager_username = update.message.from_user.username
        manager_id = update.message.from_user.id

        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–µ–Ω–µ–¥–∂–µ—Ä–µ
        logger.info(f"[handle_manager_reply] –ú–µ–Ω–µ–¥–∂–µ—Ä @{manager_username} (ID: {manager_id}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ.")

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if update.message.reply_to_message:
            replied_message_id = update.message.reply_to_message.message_id

            # –õ–æ–≥–∏—Ä—É–µ–º —Ñ–∞–∫—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
            logger.info(f"[handle_manager_reply] –ú–µ–Ω–µ–¥–∂–µ—Ä @{manager_username} (ID: {manager_id}) –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å ID {replied_message_id}.")

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–≤—è–∑—å –º–µ–∂–¥—É —ç—Ç–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
            if replied_message_id in user_manager_messages:
                user_data = user_manager_messages[replied_message_id]
                user_chat_id = user_data["user_chat_id"]
                user_username = user_data["user_username"]  # –ü–æ–ª—É—á–∞–µ–º username –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

                # –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                logger.info(
                    f"[handle_manager_reply] –û—Ç–≤–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ @{manager_username} (ID: {manager_id}) –ø–µ—Ä–µ—Å—ã–ª–∞–µ—Ç—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @{user_username} (ID: {user_chat_id})."
                )

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                await context.bot.send_message(
                    chat_id=user_chat_id,
                    text=f"–û—Ç–≤–µ—Ç –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞: {update.message.text}"
                )

                # –õ–æ–≥–∏—Ä—É–µ–º —É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Å–ª–æ–≤–∞—Ä—è
                logger.info(f"[handle_manager_reply] –ó–∞–ø–∏—Å—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID {replied_message_id} —É–¥–∞–ª–µ–Ω–∞ –∏–∑ user_manager_messages.")

                # –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ —Å–ª–æ–≤–∞—Ä—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
                del user_manager_messages[replied_message_id]
            else:
                # –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–≤—è–∑—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞
                logger.warning(f"[handle_manager_reply] –°–≤—è–∑—å –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è —Å ID {replied_message_id} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ user_manager_messages.")
        else:
            # –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º
            logger.info(f"[handle_manager_reply] –ú–µ–Ω–µ–¥–∂–µ—Ä @{manager_username} (ID: {manager_id}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ, –Ω–æ –æ–Ω–æ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.")
    else:
        # –õ–æ–≥–∏—Ä—É–µ–º, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞
        logger.info(f"[handle_manager_reply] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{update.message.from_user.username} (ID: {update.message.from_user.id}) –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –∫–∞–∫ –æ—Ç–≤–µ—Ç –º–µ–Ω–µ–¥–∂–µ—Ä–∞.")
# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = Application.builder().token(TOKEN).build()

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—ã
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –æ—Ç–≤–µ—Ç–æ–≤ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_manager_reply))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    app.run_webhook(
        listen="0.0.0.0",  # Listen on all interfaces
        port=5000,  # Port to listen on
        url_path=TOKEN,  # Webhook path (use bot token for security)
        webhook_url=f"https://donorknows.onrender.com/{TOKEN}"  # Full webhook URL
    )

if __name__ == "__main__":
    main()